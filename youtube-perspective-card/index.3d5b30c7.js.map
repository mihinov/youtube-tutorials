{"mappings":"ACAA,MAAM,EAAW,SAAS,eAA1B,CACM,EAAgB,WAAW,iBAAiB,GAAU,gBAAA,CAAiB,cACvE,EAAgB,WAAW,iBAAiB,GAAU,gBAAA,CAAiB,cAE7E,IAAI,EAAW,EACX,EAAW,EACX,EAAe,EACf,EAAe,EACf,EAAU,EACV,EAAU,EACV,EAAW,CAAA,EACX,EAAc,OAAO,UAAzB,CACI,EAAe,OAAO,WAA1B,CAGA,OAAO,gBAAA,CAAiB,cAcxB,SAAgB,CAAC,EAChB,EAAc,OAAO,UAArB,CACA,EAAe,OAAO,WAAtB,CACC,EAAU,EAAE,OAAA,CAAU,EAAE,OAAO,CAAC,EAAE,CAAC,OAAA,CAAU,EAAE,OAA/C,CACA,EAAU,EAAE,OAAA,CAAU,EAAE,OAAO,CAAC,EAAE,CAAC,OAAA,CAAU,EAAE,OAA/C,CAGD,EAAU,KAAK,GAAA,CAAI,KAAK,GAAA,CAAI,EAAS,GAAI,GACzC,EAAU,KAAK,GAAA,CAAI,KAAK,GAAA,CAAI,EAAS,GAAI,GAGzC,EAAW,CAAA,CACZ,GAzBA,OAAO,gBAAA,CAAiB,SAExB,SAAkB,CAAC,EAClB,IAAM,EAAyB,EAAc,OAAO,UAApD,CACM,EAA0B,EAAe,OAAO,WAAtD,CAEA,EAAU,KAAK,GAAA,CAAI,KAAK,GAAA,CAAI,EAAU,EAAwB,GAAI,OAAO,UAAzE,EACA,EAAU,KAAK,GAAA,CAAI,KAAK,GAAA,CAAI,EAAU,EAAyB,GAAI,OAAO,WAA1E,EAEA,EAAc,OAAO,UAArB,CACA,EAAe,OAAO,WAAtB,AACD,GAwDA,AAxCA,SAAS,IACR,EAAc,OAAO,UAArB,CACA,EAAe,OAAO,WAAtB,CAEiB,CAAA,IAAb,IACH,EAAU,EAAgB,EAC1B,EAAU,EAAgB,EAC1B,EAAW,EACX,EAAW,EACX,EAAW,CAAA,GAGZ,GAAuB,AAAC,CAAA,EAAU,CAAA,EA1CtB,IA2CZ,GAAuB,AAAC,CAAA,EAAU,CAAA,EA3CtB,IA8CZ,IAAI,EAAI,EAAW,EACf,EAAI,EAAW,EAGnB,EAAI,WAAW,EAAE,OAAA,CAAQ,IACzB,EAAI,WAAW,EAAE,OAAA,CAAQ,IAKpB,IAAM,IACR,SAAS,eAAA,CAAgB,KAAA,CAAM,WAAA,CAAY,YAAa,GAC1D,EAAe,GAGX,IAAM,IACR,SAAS,eAAA,CAAgB,KAAA,CAAM,WAAA,CAAY,YAAa,GAC1D,EAAe,GAIhB,sBAAsB,EACvB","sources":["<anon>","youtube-perspective-card/index.js"],"sourcesContent":["const htmlNode = document.documentElement;\nconst defaultMouseX = parseFloat(getComputedStyle(htmlNode).getPropertyValue(\"--mouse-x\"));\nconst defaultMouseY = parseFloat(getComputedStyle(htmlNode).getPropertyValue(\"--mouse-y\"));\nlet currentX = 0;\nlet currentY = 0;\nlet lastCurrentX = 0;\nlet lastCurrentY = 0;\nlet targetX = 0;\nlet targetY = 0;\nlet animated = false;\nlet windowWidth = window.innerWidth;\nlet windowHeight = window.innerHeight;\nconst ease = 0.05; // значение, определяющее скорость анимации или изменения координат\nwindow.addEventListener(\"pointermove\", onMove);\nwindow.addEventListener(\"resize\", onResize);\nfunction onResize(e) {\n    const lastWindowWidthPercent = windowWidth / window.innerWidth;\n    const lastWindowHeightPercent = windowHeight / window.innerHeight;\n    targetX = Math.min(Math.max(targetX * lastWindowWidthPercent, 0), window.innerWidth);\n    targetY = Math.min(Math.max(targetY * lastWindowHeightPercent, 0), window.innerHeight);\n    windowWidth = window.innerWidth;\n    windowHeight = window.innerHeight;\n}\nfunction onMove(e) {\n    windowWidth = window.innerWidth;\n    windowHeight = window.innerHeight;\n    targetX = e.touches ? e.touches[0].clientX : e.clientX;\n    targetY = e.touches ? e.touches[0].clientY : e.clientY;\n    // это сделано, чтобы не выходить за пределы экрана браузера\n    targetX = Math.min(Math.max(targetX, 0), windowWidth);\n    targetY = Math.min(Math.max(targetY, 0), windowHeight);\n    // это сделано, чтобы не выходить за пределы экрана браузера\n    animated = true;\n}\nfunction animate() {\n    windowWidth = window.innerWidth;\n    windowHeight = window.innerHeight;\n    if (animated === false) {\n        targetX = defaultMouseX * windowWidth;\n        targetY = defaultMouseY * windowHeight;\n        currentX = targetX;\n        currentY = targetY;\n        animated = true;\n    }\n    currentX = currentX + (targetX - currentX) * ease;\n    currentY = currentY + (targetY - currentY) * ease;\n    // преобразуем координаты в диапазон от 0 до 1\n    let x = currentX / windowWidth;\n    let y = currentY / windowHeight;\n    // округляем до 3 чисел после запятой\n    x = parseFloat(x.toFixed(3));\n    y = parseFloat(y.toFixed(3));\n    // Получаем прошлые CSS значения x и y, если они не равнялись прошлым, то перезаписать их\n    // устанавливаем соответствующие CSS-переменные\n    if (x !== lastCurrentX) {\n        document.documentElement.style.setProperty(\"--mouse-x\", x);\n        lastCurrentX = x;\n    }\n    if (y !== lastCurrentY) {\n        document.documentElement.style.setProperty(\"--mouse-y\", y);\n        lastCurrentY = y;\n    }\n    requestAnimationFrame(animate);\n}\nanimate();\n\n//# sourceMappingURL=index.3d5b30c7.js.map\n","const htmlNode = document.documentElement;\nconst defaultMouseX = parseFloat(getComputedStyle(htmlNode).getPropertyValue('--mouse-x'));\nconst defaultMouseY = parseFloat(getComputedStyle(htmlNode).getPropertyValue('--mouse-y'));\n\nlet currentX = 0;\nlet currentY = 0;\nlet lastCurrentX = 0;\nlet lastCurrentY = 0;\nlet targetX = 0;\nlet targetY = 0;\nlet animated = false;\nlet windowWidth = window.innerWidth;\nlet windowHeight = window.innerHeight;\nconst ease = 0.05; // значение, определяющее скорость анимации или изменения координат\n\nwindow.addEventListener('pointermove', onMove);\nwindow.addEventListener('resize', onResize);\n\nfunction onResize(e) {\n\tconst lastWindowWidthPercent = windowWidth / window.innerWidth;\n\tconst lastWindowHeightPercent = windowHeight / window.innerHeight;\n\n\ttargetX = Math.min(Math.max(targetX * lastWindowWidthPercent, 0), window.innerWidth);\n\ttargetY = Math.min(Math.max(targetY * lastWindowHeightPercent, 0), window.innerHeight);\n\n\twindowWidth = window.innerWidth;\n\twindowHeight = window.innerHeight;\n}\n\nfunction onMove(e) {\n\twindowWidth = window.innerWidth;\n\twindowHeight = window.innerHeight;\n  targetX = e.touches ? e.touches[0].clientX : e.clientX;\n  targetY = e.touches ? e.touches[0].clientY : e.clientY;\n\n\t// это сделано, чтобы не выходить за пределы экрана браузера\n\ttargetX = Math.min(Math.max(targetX, 0), windowWidth);\n\ttargetY = Math.min(Math.max(targetY, 0), windowHeight);\n\t// это сделано, чтобы не выходить за пределы экрана браузера\n\n\tanimated = true;\n}\n\nfunction animate() {\n\twindowWidth = window.innerWidth;\n\twindowHeight = window.innerHeight;\n\n\tif (animated === false) {\n\t\ttargetX = defaultMouseX * windowWidth;\n\t\ttargetY = defaultMouseY * windowHeight;\n\t\tcurrentX = targetX;\n\t\tcurrentY = targetY;\n\t\tanimated = true;\n\t}\n\n\tcurrentX = currentX + ((targetX - currentX) * ease);\n\tcurrentY = currentY + ((targetY - currentY) * ease);\n\n\t// преобразуем координаты в диапазон от 0 до 1\n\tlet x = currentX / windowWidth;\n\tlet y = currentY / windowHeight;\n\n\t// округляем до 3 чисел после запятой\n\tx = parseFloat(x.toFixed(3));\n\ty = parseFloat(y.toFixed(3));\n\n  // Получаем прошлые CSS значения x и y, если они не равнялись прошлым, то перезаписать их\n\n\t// устанавливаем соответствующие CSS-переменные\n  if (x !== lastCurrentX) {\n    document.documentElement.style.setProperty('--mouse-x', x);\n\t\tlastCurrentX = x;\n  }\n\n  if (y !== lastCurrentY) {\n    document.documentElement.style.setProperty('--mouse-y', y);\n\t\tlastCurrentY = y;\n  }\n\n\n\trequestAnimationFrame(animate);\n}\n\nanimate();\n"],"names":["htmlNode","document","documentElement","defaultMouseX","parseFloat","getComputedStyle","getPropertyValue","defaultMouseY","currentX","currentY","lastCurrentX","lastCurrentY","targetX","targetY","animated","windowWidth","window","innerWidth","windowHeight","innerHeight","addEventListener","e","touches","clientX","clientY","Math","min","max","lastWindowWidthPercent","lastWindowHeightPercent","animate","x","y","toFixed","style","setProperty","requestAnimationFrame"],"version":3,"file":"index.3d5b30c7.js.map"}