(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const a of document.querySelectorAll('link[rel="modulepreload"]'))r(a);new MutationObserver(a=>{for(const n of a)if(n.type==="childList")for(const c of n.addedNodes)c.tagName==="LINK"&&c.rel==="modulepreload"&&r(c)}).observe(document,{childList:!0,subtree:!0});function t(a){const n={};return a.integrity&&(n.integrity=a.integrity),a.referrerPolicy&&(n.referrerPolicy=a.referrerPolicy),a.crossOrigin==="use-credentials"?n.credentials="include":a.crossOrigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function r(a){if(a.ep)return;a.ep=!0;const n=t(a);fetch(a.href,n)}})();class o{constructor(e){this._grades={0:{name:"Iron",min:0,max:60,nextGradeId:1},1:{name:"Platinum",min:60,max:150,nextGradeId:2},2:{name:"Diamond",min:150,max:300,nextGradeId:3},3:{name:"Master",min:300,max:500,nextGradeId:4},4:{name:"Grandmaster",min:500,max:800,nextGradeId:5},5:{name:"Challenger",min:800,max:1e5,nextGradeId:null}},this._cssClasses={balance:"balance",balanceTotal:"balance__total",balanceProgress:"balance__progress",balanceGradeStart:"balance__grade_start",balanceGradeEnd:"balance__grade_end"},this._balance={initBalance:0,addedBalance:0,totalBalance:0},this._currentGradeId=-1,this._initNodes(e),this._calcCurrentGradeId(),this._renderBalance()}_initNodes(e){e.innerHTML=`
			<div class="balance">
				<div class="balance__text">
					Ваш баланc:
					<span class="balance__total">0</span>
				</div>
				<progress class="balance__progress"></progress>
				<div class="balance__grades">
					<div class="balance__grade balance__grade_start">Iron</div>
					<div class="balance__grade balance__grade_end">Platinum</div>
				</div>
			</div>
		`;const t=this._querySelector(e,"."+this._cssClasses.balance);this._nodes={balanceNode:t,balanceTotalNode:this._querySelector(t,"."+this._cssClasses.balanceTotal),balanceProgressNode:this._querySelector(t,"."+this._cssClasses.balanceProgress),balanceGradeStartNode:this._querySelector(t,"."+this._cssClasses.balanceGradeStart),balanceGradeEndNode:this._querySelector(t,"."+this._cssClasses.balanceGradeEnd)}}_querySelector(e,t){const r=e.querySelector(t);if(r===null)throw new Error(`ExperienceBar: элемент с классом ${t} не найден`);return r}addBalance(e){this._balance.addedBalance=e,this._calcTotalBalance(),this._calcCurrentGradeId(),this._renderBalance()}setInitBalance(e){this._balance.initBalance=e,this._calcTotalBalance(),this._calcCurrentGradeId(),this._renderBalance()}_renderBalance(){const e=this.getCurrentGrade(),t=this._grades[this._currentGradeId+1],r=this._balance.totalBalance,a=e.max,n=e.min;this._nodes.balanceProgressNode.setAttribute("min",String(0)),this._nodes.balanceProgressNode.setAttribute("max",String(a-n)),this._nodes.balanceProgressNode.value=r-n,this._nodes.balanceTotalNode.textContent=String(r),this._nodes.balanceGradeStartNode.textContent=e.name,t!==void 0?this._nodes.balanceGradeEndNode.textContent=t.name:this._nodes.balanceGradeEndNode.textContent="∞"}_calcTotalBalance(){this._balance.totalBalance=this._balance.initBalance+this._balance.addedBalance}_calcCurrentGradeId(){const e=this._balance.totalBalance;for(const t in this._grades){const r=this._grades[t],a=r.min,n=r.max;if(e>=a&&e<n){this._currentGradeId=Number(t);break}}}getCurrentGrade(){if(this._currentGradeId===-1)throw new Error("ExperienceBar: текущий грейд не установлен");return this._grades[this._currentGradeId]}}const l=document.querySelector(".input-aurum"),i=document.querySelector(".injected-bar");if(i===null||l===null)throw new Error("Что-то не найдено");const d=new o(i);d.setInitBalance(30);l.addEventListener("input",()=>{const s=l.value;parseFloat(s)>=0&&!isNaN(parseFloat(s))?d.addBalance(parseFloat(s)):s===""&&d.addBalance(0)});
