{"mappings":"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","sources":["<anon>","youtube-game-of-life/only-js/scripts/index.js","youtube-game-of-life/only-js/scripts/game-of-life.js","youtube-game-of-life/only-js/scripts/functions/request-interval.js","youtube-game-of-life/only-js/scripts/functions/restrict-input.js","node_modules/@parcel/runtime-js/lib/runtime-1a7033c8bc1215d1.js","node_modules/@parcel/runtime-js/lib/helpers/get-worker-url.js"],"sourcesContent":["function $c1f387b1016b83f1$export$281c8d11e819ea94(fn, interval = 0) {\n    const obj = {\n        id: 0\n    };\n    let start = Date.now();\n    const animate = ()=>{\n        if (interval === 0) {\n            fn();\n            obj.id = requestAnimationFrame(animate);\n            return;\n        }\n        const now = Date.now();\n        const delta = now - start;\n        if (delta >= interval) {\n            fn();\n            start = now - delta % interval;\n        }\n        obj.id = requestAnimationFrame(animate);\n    };\n    obj.id = requestAnimationFrame(animate);\n    return obj;\n}\n\n\nfunction $da0a748be2ea26f3$export$7913c0f032ea53bb(input, min, max) {\n    let value = parseInt(input.value);\n    if (isNaN(value)) value = min;\n    else if (value < min) value = min;\n    else if (value > max) value = max;\n    input.value = value.toString();\n    return value;\n}\n\n\nvar $ec7203843e99b638$exports = {};\nvar $56b621a6dd25b2cb$exports = {};\n\"use strict\";\n$56b621a6dd25b2cb$exports = function(workerUrl, origin, isESM) {\n    if (origin === self.location.origin) // If the worker bundle's url is on the same origin as the document,\n    // use the worker bundle's own url.\n    return workerUrl;\n    else {\n        // Otherwise, create a blob URL which loads the worker bundle with `importScripts`.\n        var source = isESM ? 'import ' + JSON.stringify(workerUrl) + ';' : 'importScripts(' + JSON.stringify(workerUrl) + ');';\n        return URL.createObjectURL(new Blob([\n            source\n        ], {\n            type: 'application/javascript'\n        }));\n    }\n};\n\n\nlet $ec7203843e99b638$var$url = new URL(import.meta.resolve(\"h7bGy\"));\n$ec7203843e99b638$exports = $56b621a6dd25b2cb$exports($ec7203843e99b638$var$url.toString(), $ec7203843e99b638$var$url.origin, true);\n\n\nclass $cd65d10c62e67c5e$export$8981e2cb2c3fa123 {\n    ctx;\n    rows;\n    cols;\n    cellSize;\n    field;\n    buffer;\n    colorCell;\n    animationObj;\n    nodes;\n    cycles = 0;\n    played = false;\n    interval = 500;\n    gameTime = 0;\n    gameStartTime = 0;\n    gameLastTime = 0;\n    random = false;\n    speed = 0;\n    activeCells = 0;\n    localStorageUse = false;\n    isDragging = false;\n    isRealDragging = false;\n    animationTimeId;\n    worker = new Worker($ec7203843e99b638$exports);\n    loading = false;\n    focusedInput = null;\n    popupHidden = false;\n    constructor({ injectedNode: injectedNode, cellsCountX: cellsCountX, cellsCountY: cellsCountY, random: random, speed: speed, localStorageUse: localStorageUse, popupHidden: popupHidden }){\n        if (speed < 1) throw new Error(\"GameOfLife: speed \\u043D\\u0435 \\u043C\\u043E\\u0436\\u0435\\u0442 \\u0431\\u044B\\u0442\\u044C \\u043C\\u0435\\u043D\\u044C\\u0448\\u0435 1\");\n        if (speed > 10) throw new Error(\"GameOfLife: speed \\u043D\\u0435 \\u043C\\u043E\\u0436\\u0435\\u0442 \\u0431\\u044B\\u0442\\u044C \\u0431\\u043E\\u043B\\u044C\\u0448\\u0435 10\");\n        this.rows = cellsCountX;\n        this.cols = cellsCountY;\n        this.random = random;\n        this.speed = speed;\n        this.localStorageUse = localStorageUse;\n        this.popupHidden = popupHidden;\n        this.initNodes(injectedNode);\n        this.ctx = this.nodes.canvasNode.getContext(\"2d\");\n        if (this.localStorageUse) this.useLocalStorage();\n        this.initCalcSpeed();\n        this.setCanvasSize();\n        this.setColorCell();\n        this.initInputNodes();\n        this.initPopupHidden();\n        this.sendWorkerInitFields({\n            random: this.random,\n            rows: this.rows,\n            cols: this.cols\n        }).then(({ activeCells: activeCells, field: field, buffer: buffer })=>{\n            this.initEventListeners();\n            this.drawField();\n            this.renderPopup();\n        });\n    }\n    initInputNodes() {\n        this.nodes.popupInputRowsNode.value = String(this.rows);\n        this.nodes.popupInputColsNode.value = String(this.cols);\n    }\n    initPopupHidden() {\n        this.togglePopup(this.popupHidden);\n    }\n    disableInputs() {\n        this.nodes.popupInputRowsNode.disabled = true;\n        this.nodes.popupInputColsNode.disabled = true;\n    }\n    enableInputs() {\n        this.nodes.popupInputRowsNode.disabled = false;\n        this.nodes.popupInputColsNode.disabled = false;\n        if (this.focusedInput !== null) {\n            this.focusedInput.focus();\n            this.focusedInput = null;\n        }\n    }\n    sendWorkerInitFields({ random: random, rows: rows, cols: cols }) {\n        this.load();\n        this.disableInputs();\n        this.worker.postMessage({\n            type: 'initFields',\n            payload: {\n                random: random,\n                rows: rows,\n                cols: cols\n            }\n        });\n        const resultWorker = new Promise((resolve, reject)=>{\n            this.worker.onmessage = (event)=>{\n                const message = event.data;\n                this.loadComplete();\n                this.enableInputs();\n                if (message.type === 'result: initFields') {\n                    const data = message.data;\n                    const { activeCells: activeCells, field: field, buffer: buffer } = data;\n                    this.activeCells = activeCells;\n                    this.field = field;\n                    this.buffer = buffer;\n                    resolve(data);\n                }\n                reject(false);\n            };\n        });\n        return resultWorker;\n    }\n    load() {\n        this.loading = true;\n        this.nodes.popupLoadNode.classList.add('popup__load_active');\n        this.nodes.popupNode.classList.add('popup_load');\n    }\n    loadComplete() {\n        this.loading = false;\n        this.nodes.popupLoadNode.classList.remove('popup__load_active');\n        this.nodes.popupNode.classList.remove('popup_load');\n    }\n    initEventListeners() {\n        window.addEventListener('resize', this.resizeAndDraw);\n        const matchMediaDark = window.matchMedia('(prefers-color-scheme: dark)');\n        matchMediaDark.addEventListener('change', this.setColorCellAndDraw);\n        this.nodes.popupPauseNode.addEventListener('click', ()=>{\n            if (this.played === false) return;\n            this.stopGame();\n        });\n        this.nodes.popupPlayNode.addEventListener('click', ()=>{\n            if (this.played === true) return;\n            this.startGame();\n        });\n        this.nodes.popupGenerateNode.addEventListener('click', this.generateNewFields);\n        this.nodes.canvasNode.addEventListener('pointerdown', (event)=>{\n            if (this.loading === true) return;\n            if (event.button === 2 || event.button === 1) return false; // Если это правая или средняя кнопка мыши, это не тот клик\n            this.isDragging = true;\n            this.isRealDragging = false;\n        });\n        this.nodes.canvasNode.addEventListener('pointermove', (event)=>{\n            if (event.button === 2 || event.button === 1) return false; // Если это правая или средняя кнопка мыши, это не тот клик\n            if (this.isDragging === true && this.loading === false) {\n                this.isRealDragging = true;\n                this.generateCellByClick(event, true);\n            }\n        });\n        document.addEventListener('pointerup', (event)=>{\n            if (event.button === 2 || event.button === 1) return false; // Если это правая или средняя кнопка мыши, это не тот клик\n            const clickOnPopupBool = this.isClickOnElement(event, this.nodes.popupNode);\n            if (clickOnPopupBool === true) return;\n            if (this.isRealDragging === false && this.loading === false) this.generateCellByClick(event, false);\n            this.isDragging = false;\n            this.isRealDragging = false;\n        });\n        this.nodes.popupRandomCheckboxNode.addEventListener('input', ()=>{\n            this.random = !this.random;\n            if (this.localStorageUse) this.setLocalStorage('random', this.random);\n            this.renderRandom();\n        });\n        this.nodes.popupSpeedRangeNode.addEventListener('input', this.calcSpeedInputChange);\n        this.nodes.popupClearNode.addEventListener('click', this.clear);\n        this.nodes.popupStepNode.addEventListener('click', ()=>{\n            this.disableInputs();\n            this.stepGame()?.then((data)=>{\n                this.enableInputs();\n            });\n        });\n        this.nodes.popupInputRowsNode.addEventListener('input', ()=>{\n            const newRows = (0, $da0a748be2ea26f3$export$7913c0f032ea53bb)(this.nodes.popupInputRowsNode, 0, 2000);\n            if (this.localStorageUse) this.setLocalStorage('rows', newRows);\n            this.focusedInput = this.nodes.popupInputRowsNode;\n            this.resizeFieldRows(newRows);\n        });\n        this.nodes.popupInputColsNode.addEventListener('input', ()=>{\n            const newCols = (0, $da0a748be2ea26f3$export$7913c0f032ea53bb)(this.nodes.popupInputColsNode, 0, 2000);\n            if (this.localStorageUse) this.setLocalStorage('cols', newCols);\n            this.focusedInput = this.nodes.popupInputColsNode;\n            this.resizeFieldCols(newCols);\n        });\n        this.nodes.popupCloseNode.addEventListener('click', ()=>{\n            this.popupHidden = !this.popupHidden;\n            this.togglePopup(this.popupHidden);\n        });\n    }\n    togglePopup = (popupHidden)=>{\n        if (this.localStorageUse === true) this.setLocalStorage('popupHidden', this.popupHidden);\n        if (this.popupHidden === true) {\n            this.nodes.popupNode.classList.add('popup_hidden');\n            this.nodes.popupCloseNode.textContent = \"\\u041E\\u0442\\u043A\\u0440\\u044B\\u0442\\u044C\";\n        } else {\n            this.nodes.popupNode.classList.remove('popup_hidden');\n            this.nodes.popupCloseNode.textContent = \"\\u0421\\u043A\\u0440\\u044B\\u0442\\u044C\";\n        }\n    };\n    resizeFieldRows(newRows) {\n        if (this.loading === true) return;\n        this.sendWorkerResizeField(newRows, this.cols, this.random).then((data)=>{\n            this.setCanvasSize();\n            this.drawField();\n            this.renderTime();\n            this.renderPopup();\n        });\n    }\n    resizeFieldCols(newCols) {\n        if (this.loading === true) return;\n        this.sendWorkerResizeField(this.rows, newCols, this.random).then((data)=>{\n            this.setCanvasSize();\n            this.drawField();\n            this.renderTime();\n            this.renderPopup();\n        });\n    }\n    sendWorkerResizeField(newRows, newCols, random) {\n        this.load();\n        this.disableInputs();\n        this.worker.postMessage({\n            type: 'resizeField',\n            payload: {\n                newRows: newRows,\n                newCols: newCols,\n                random: random\n            }\n        });\n        const resultWorker = new Promise((resolve, reject)=>{\n            this.worker.onmessage = (event)=>{\n                const message = event.data;\n                this.loadComplete();\n                this.enableInputs();\n                if (message.type === 'result: resizeField') {\n                    const data = message.data;\n                    const { field: field, buffer: buffer, activeCells: activeCells, rows: rows, cols: cols } = data;\n                    this.field = field;\n                    this.buffer = buffer;\n                    this.activeCells = activeCells;\n                    this.rows = rows;\n                    this.cols = cols;\n                    resolve(data);\n                }\n                reject(false);\n            };\n        }).catch(()=>{});\n        return resultWorker;\n    }\n    isClickOnElement(event, element) {\n        const target = event.target; // Получаем целевой элемент клика\n        // Проверяем, является ли целевой элемент или его родительские элементы равным заданному элементу\n        let currentNode = target;\n        while(currentNode != null){\n            if (currentNode === element) return true;\n            currentNode = currentNode.parentElement;\n        }\n        // Если не было найдено совпадений, возвращаем false\n        return false;\n    }\n    sendWorkerDeleteOrCreateCell(typeAction, key) {\n        this.load();\n        this.worker.postMessage({\n            type: 'deleteOrCreateCell',\n            payload: {\n                typeAction: typeAction,\n                key: key\n            }\n        });\n        const resultWorker = new Promise((resolve, reject)=>{\n            this.worker.onmessage = (event)=>{\n                const message = event.data;\n                this.loadComplete();\n                if (message.type === 'result: deleteOrCreateCell') {\n                    const data = message.data;\n                    resolve(data);\n                }\n                reject(false);\n            };\n        });\n        return resultWorker;\n    }\n    generateCellByClick = (event, moved = false)=>{\n        if (this.played === true) return;\n        const rect = this.nodes.canvasNode.getBoundingClientRect();\n        const x = event.clientX - rect.left;\n        const y = event.clientY - rect.top;\n        const col = Math.floor(x / this.cellSize);\n        const row = Math.floor(y / this.cellSize);\n        const key = this.getKey(row, col);\n        const isCellAlive = this.field.get(key);\n        const deleteCell = ()=>{\n            this.activeCells--;\n            this.field.set(key, false);\n            this.sendWorkerDeleteOrCreateCell('delete', key).then();\n        };\n        const createCell = ()=>{\n            this.activeCells++;\n            this.field.set(key, true);\n            this.sendWorkerDeleteOrCreateCell('create', key).then();\n        };\n        if (isCellAlive === false && moved === true) createCell();\n        else if (isCellAlive === false && moved === false) createCell();\n        else if (isCellAlive === true && moved === false) deleteCell();\n        this.renderPopulation();\n        this.drawField();\n    };\n    initCalcSpeed() {\n        const max = Number(this.nodes.popupSpeedRangeNode.max);\n        const min = Number(this.nodes.popupSpeedRangeNode.min);\n        const speedPercent = (this.speed - 1) / 9;\n        const value = min + speedPercent * (max - min);\n        this.nodes.popupSpeedRangeNode.value = String(value);\n        this.nodes.popupSpeedInfoNode.textContent = String(this.speed);\n    }\n    calcSpeedInputChange = ()=>{\n        const lastGameState = this.played;\n        this.stopGame();\n        const currentVal = this.nodes.popupSpeedRangeNode.valueAsNumber;\n        const max = Number(this.nodes.popupSpeedRangeNode.max);\n        const min = Number(this.nodes.popupSpeedRangeNode.min);\n        const end = max - min;\n        const currentValMod = currentVal - min;\n        const currentValPercent = currentValMod / end;\n        const newSpeed = Number((currentValPercent * 9 + 1).toFixed(1));\n        this.speed = newSpeed;\n        this.nodes.popupSpeedInfoNode.textContent = String(this.speed);\n        if (this.localStorageUse) this.setLocalStorage('speed', this.speed);\n        if (lastGameState === true) this.startGame();\n    };\n    useLocalStorage() {\n        const lastLocalStorage = this.getLocalStorage();\n        if (lastLocalStorage.random !== undefined) this.random = lastLocalStorage.random;\n        if (lastLocalStorage.speed !== undefined) this.speed = lastLocalStorage.speed;\n        if (lastLocalStorage.rows !== undefined) this.rows = lastLocalStorage.rows;\n        if (lastLocalStorage.cols !== undefined) this.cols = lastLocalStorage.cols;\n        if (lastLocalStorage.popupHidden !== undefined) this.popupHidden = lastLocalStorage.popupHidden;\n    }\n    clear = ()=>{\n        this.loading;\n        this.stopGame();\n        this.gameTime = 0;\n        this.gameLastTime = 0;\n        this.gameStartTime = 0;\n        this.cycles = 0;\n        this.disableInputs();\n        this.sendWorkerInitFields({\n            random: false,\n            rows: this.rows,\n            cols: this.cols\n        }).then((data)=>{\n            this.drawField();\n            this.renderTime();\n            this.renderPopup();\n            this.enableInputs();\n        });\n    };\n    generateNewFields = ()=>{\n        this.loading;\n        this.sendWorkerInitFields({\n            random: true,\n            rows: this.rows,\n            cols: this.cols\n        }).then((data)=>{\n            this.cycles = 0;\n            this.drawField();\n            this.renderPopup();\n        });\n    };\n    initNodes(injectedNode) {\n        injectedNode.innerHTML = `\n\t\t\t<div class=\"wrapper\">\n\t\t\t\t<div class=\"wrapper-canvas\">\n\t\t\t\t\t<canvas class=\"canvas\"></canvas>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"popup\">\n\t\t\t\t\t<div class=\"popup__item popup__play\">Play</div>\n\t\t\t\t\t<div class=\"popup__item popup__pause\">\\u{41F}\\u{430}\\u{443}\\u{437}\\u{430}</div>\n\t\t\t\t\t<div class=\"popup__item popup__clear\">\\u{41E}\\u{447}\\u{438}\\u{441}\\u{442}\\u{438}\\u{442}\\u{44C}</div>\n\t\t\t\t\t<div class=\"popup__item popup__step\">\\u{428}\\u{430}\\u{433}</div>\n\t\t\t\t\t<div class=\"popup__item popup__generate\">\\u{421}\\u{433}\\u{435}\\u{43D}\\u{435}\\u{440}\\u{438}\\u{440}\\u{43E}\\u{432}\\u{430}\\u{442}\\u{44C}</div>\n\t\t\t\t\t<label class=\"popup__item popup__random-checkbox-item\">\n\t\t\t\t\t\t<input type=\"checkbox\" class=\"popup__random-checkbox\">\n\t\t\t\t\t\t<span>\\u{420}\\u{430}\\u{43D}\\u{434}\\u{43E}\\u{43C}</span>\n\t\t\t\t\t</label>\n\t\t\t\t\t<div class=\"popup__item\">\n\t\t\t\t\t\t\\u{412}\\u{440}\\u{435}\\u{43C}\\u{44F}:\n\t\t\t\t\t\t<span class=\"popup__time\">0.0</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"popup__item\">\\u{41F}\\u{43E}\\u{43A}\\u{43E}\\u{43B}\\u{435}\\u{43D}\\u{438}\\u{435}: <span class=\"popup__cycles\">0</span></div>\n\t\t\t\t\t<div class=\"popup__item\">\\u{41D}\\u{430}\\u{441}\\u{435}\\u{43B}\\u{435}\\u{43D}\\u{438}\\u{435}: <span class=\"popup__population\">0</span></div>\n\t\t\t\t\t<div class=\"popup__item\">\n\t\t\t\t\t\t<span>\\u{421}\\u{43A}\\u{43E}\\u{440}\\u{43E}\\u{441}\\u{442}\\u{44C}: </span>\n\t\t\t\t\t\t<span class=\"popup__speed-info\">1</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"popup__item\">\n\t\t\t\t\t\t<input class=\"popup__speed-range\" type=\"range\" min=\"0\" max=\"100\" value=\"50\">\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"popup__item popup__item_inputs\">\n\t\t\t\t\t\t<input type=\"number\" class=\"popup__rows popup__inputs\" placeholder=\"rows\" min=\"0\" max=\"2000\">\n\t\t\t\t\t\t<input type=\"number\" class=\"popup__cols popup__inputs\" placeholder=\"cols\" min=\"0\" max=\"2000\">\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"popup__item popup__close\">\\u{421}\\u{43A}\\u{440}\\u{44B}\\u{442}\\u{44C}</div>\n\n\t\t\t\t\t<div class=\"popup__item popup__load\">\\u{417}\\u{430}\\u{433}\\u{440}\\u{443}\\u{437}\\u{43A}\\u{430}</div>\n\n\t\t\t\t</div>\n\n\t\t\t</div>\n\t\t`;\n        const popupNode = this._querySelector(injectedNode, '.popup');\n        const canvasNode = this._querySelector(injectedNode, '.canvas');\n        const wrapperCanvasNode = this._querySelector(injectedNode, '.wrapper-canvas');\n        const popupPlayNode = this._querySelector(popupNode, '.popup__play');\n        const popupPauseNode = this._querySelector(popupNode, '.popup__pause');\n        const popupTimeNode = this._querySelector(popupNode, '.popup__time');\n        const popupPopulationNode = this._querySelector(popupNode, '.popup__population');\n        const popupCyclesNode = this._querySelector(popupNode, '.popup__cycles');\n        const popupGenerateNode = this._querySelector(popupNode, '.popup__generate');\n        const popupRandomCheckboxNode = this._querySelector(popupNode, '.popup__random-checkbox');\n        const popupSpeedRangeNode = this._querySelector(popupNode, '.popup__speed-range');\n        const popupSpeedInfoNode = this._querySelector(popupNode, '.popup__speed-info');\n        const popupClearNode = this._querySelector(popupNode, '.popup__clear');\n        const popupStepNode = this._querySelector(popupNode, '.popup__step');\n        const popupLoadNode = this._querySelector(popupNode, '.popup__load');\n        const popupInputRowsNode = this._querySelector(popupNode, '.popup__rows');\n        const popupInputColsNode = this._querySelector(popupNode, '.popup__cols');\n        const popupCloseNode = this._querySelector(popupNode, '.popup__close');\n        this.nodes = {\n            canvasNode: canvasNode,\n            popupNode: popupNode,\n            popupPlayNode: popupPlayNode,\n            popupPauseNode: popupPauseNode,\n            popupTimeNode: popupTimeNode,\n            popupPopulationNode: popupPopulationNode,\n            popupCyclesNode: popupCyclesNode,\n            popupGenerateNode: popupGenerateNode,\n            wrapperCanvasNode: wrapperCanvasNode,\n            popupRandomCheckboxNode: popupRandomCheckboxNode,\n            popupSpeedRangeNode: popupSpeedRangeNode,\n            popupSpeedInfoNode: popupSpeedInfoNode,\n            popupClearNode: popupClearNode,\n            popupStepNode: popupStepNode,\n            popupLoadNode: popupLoadNode,\n            popupInputRowsNode: popupInputRowsNode,\n            popupInputColsNode: popupInputColsNode,\n            popupCloseNode: popupCloseNode\n        };\n    }\n    _querySelector(parentNode, selector) {\n        const node = parentNode.querySelector(selector);\n        if (node === null) throw new Error(`GameOfLife: \\u{44D}\\u{43B}\\u{435}\\u{43C}\\u{435}\\u{43D}\\u{442} \\u{441} \\u{43A}\\u{43B}\\u{430}\\u{441}\\u{441}\\u{43E}\\u{43C} ${selector} \\u{43D}\\u{435} \\u{43D}\\u{430}\\u{439}\\u{434}\\u{435}\\u{43D}`);\n        return node;\n    }\n    resizeAndDraw = ()=>{\n        this.setCanvasSize();\n        this.drawField();\n    };\n    setColorCell = ()=>{\n        this.colorCell = getComputedStyle(document.documentElement).getPropertyValue('--color');\n    };\n    setColorCellAndDraw = ()=>{\n        this.setColorCell();\n        this.drawField();\n    };\n    setCanvasSize = ()=>{\n        const width = this.nodes.wrapperCanvasNode.offsetWidth;\n        const height = this.nodes.wrapperCanvasNode.offsetHeight;\n        const aspectRatio = this.cols / this.rows;\n        const canvasWidth = Math.min(width, height * aspectRatio);\n        const canvasHeight = canvasWidth / aspectRatio;\n        this.cellSize = canvasWidth / this.cols;\n        const xPadding = (width - canvasWidth) / 2;\n        const yPadding = (height - canvasHeight) / 2;\n        this.nodes.canvasNode.width = canvasWidth;\n        this.nodes.canvasNode.height = canvasHeight;\n        this.nodes.wrapperCanvasNode.style.padding = `${yPadding}px ${xPadding}px`;\n    };\n    getKey(row, col) {\n        return `${row}-${col}`;\n    }\n    drawField() {\n        this.load();\n        this.ctx.clearRect(0, 0, this.nodes.canvasNode.width, this.nodes.canvasNode.height);\n        const cellSize = this.cellSize;\n        this.ctx.fillStyle = this.colorCell;\n        for(let i = 0; i < this.rows; i++)for(let j = 0; j < this.cols; j++){\n            const key = this.getKey(i, j);\n            if (this.field.get(key)) this.ctx.fillRect(j * cellSize, i * cellSize, cellSize, cellSize);\n        }\n        this.loadComplete();\n    }\n    sendWorkerUpdateField() {\n        this.load();\n        this.worker.postMessage({\n            type: 'updateField',\n            payload: {}\n        });\n        const resultWorker = new Promise((resolve, reject)=>{\n            this.worker.onmessage = (event)=>{\n                const message = event.data;\n                this.loadComplete();\n                if (message.type === 'result: updateField') {\n                    const data = message.data;\n                    const { activeCells: activeCells, field: field, buffer: buffer } = data;\n                    this.activeCells = activeCells;\n                    this.field = field;\n                    this.buffer = buffer;\n                    resolve(data);\n                }\n                reject(false);\n            };\n        });\n        return resultWorker;\n    }\n    renderPopup() {\n        this.renderPopulation();\n        this.renderRandom();\n        this.nodes.popupCyclesNode.textContent = String(this.cycles);\n        this.nodes.popupRandomCheckboxNode.checked = this.random;\n    }\n    renderTime() {\n        let gameTime = Date.now() - this.gameStartTime + this.gameLastTime;\n        if (this.gameStartTime === 0) gameTime = 0;\n        this.gameTime = gameTime;\n        this.nodes.popupTimeNode.textContent = (this.gameTime / 1000).toFixed(1);\n    }\n    renderRandom() {\n        if (this.random === true) this.nodes.popupGenerateNode.classList.add('popup__generate_active');\n        else this.nodes.popupGenerateNode.classList.remove('popup__generate_active');\n    }\n    renderPopulation() {\n        this.nodes.popupPopulationNode.textContent = String(this.activeCells);\n    }\n    stepGame = ()=>{\n        if (this.loading === true) return;\n        return this.sendWorkerUpdateField().then((data)=>{\n            this.drawField();\n            this.cycles = this.cycles + 1;\n            this.renderPopup();\n            return data;\n        });\n    };\n    startGame() {\n        this.disableInputs();\n        this.played = true;\n        this.gameStartTime = Date.now();\n        this.animationObj = (0, $c1f387b1016b83f1$export$281c8d11e819ea94)(this.stepGame, this.interval / this.speed ** 1.5);\n        this.animationTimeId = (0, $c1f387b1016b83f1$export$281c8d11e819ea94)(this.stepAnimationRenderTime);\n    }\n    stepAnimationRenderTime = ()=>{\n        this.renderTime();\n    };\n    stopGame() {\n        if (this.played === false) return;\n        this.played = false;\n        this.gameLastTime = this.gameTime;\n        cancelAnimationFrame(this.animationObj.id);\n        cancelAnimationFrame(this.animationTimeId.id);\n        this.enableInputs();\n    }\n    getLocalStorage() {\n        return JSON.parse(localStorage.getItem('life') || '{}');\n    }\n    setLocalStorage(key, value) {\n        const lastLocalStorage = this.getLocalStorage();\n        lastLocalStorage[key] = value;\n        localStorage.setItem('life', JSON.stringify(lastLocalStorage));\n    }\n}\n\n\nconst $54810fc92916998b$var$injectedNode = document.querySelector('.injected-game-life');\nif ($54810fc92916998b$var$injectedNode === null) throw new Error(\"injectedNode \\u043D\\u0435 \\u043D\\u0430\\u0439\\u0434\\u0435\\u043D\");\nconst $54810fc92916998b$var$game = new (0, $cd65d10c62e67c5e$export$8981e2cb2c3fa123)({\n    cellsCountX: 100,\n    cellsCountY: 100,\n    random: false,\n    speed: 1,\n    localStorageUse: true,\n    popupHidden: false,\n    injectedNode: $54810fc92916998b$var$injectedNode\n});\n\n\n//# sourceMappingURL=only-js.256fcbba.js.map\n","import { GameOfLife } from \"./game-of-life\";\n\nconst injectedNode = document.querySelector('.injected-game-life');\n\nif (injectedNode === null) {\n\tthrow new Error('injectedNode не найден');\n}\n\nconst game = new GameOfLife({\n\tcellsCountX: 100,\n\tcellsCountY: 100,\n\trandom: false,\n\tspeed: 1,\n\tlocalStorageUse: true,\n\tpopupHidden: false,\n\tinjectedNode: injectedNode\n});\n","import { requestInterval } from \"./functions/request-interval\";\nimport { restrictInputValue } from \"./functions/restrict-input\";\n\nexport class GameOfLife {\n\tctx;\n\trows;\n\tcols;\n\tcellSize;\n\tfield;\n\tbuffer;\n\tcolorCell;\n\tanimationObj;\n\tnodes;\n\tcycles = 0;\n\tplayed = false;\n\tinterval = 500;\n\tgameTime = 0;\n\tgameStartTime = 0;\n\tgameLastTime = 0;\n\trandom = false;\n\tspeed = 0;\n\tactiveCells = 0;\n\tlocalStorageUse = false;\n\tisDragging = false;\n\tisRealDragging = false;\n\tanimationTimeId;\n\tworker = new Worker(new URL('workers/worker-game-of-life-logic.js', import.meta.url));\n\tloading = false;\n\tfocusedInput = null;\n\tpopupHidden = false;\n\n\tconstructor({ injectedNode, cellsCountX, cellsCountY, random, speed, localStorageUse, popupHidden }) {\n\t\tif (speed < 1) {\n\t\t\tthrow new Error('GameOfLife: speed не может быть меньше 1');\n\t\t}\n\t\tif (speed > 10) {\n\t\t\tthrow new Error('GameOfLife: speed не может быть больше 10');\n\t\t}\n\n\t\tthis.rows = cellsCountX;\n\t\tthis.cols = cellsCountY;\n\t\tthis.random = random;\n\t\tthis.speed = speed;\n\t\tthis.localStorageUse = localStorageUse;\n\t\tthis.popupHidden = popupHidden;\n\n\t\tthis.initNodes(injectedNode);\n\t\tthis.ctx = this.nodes.canvasNode.getContext(\"2d\");\n\t\tif (this.localStorageUse) this.useLocalStorage();\n\t\tthis.initCalcSpeed();\n\t\tthis.setCanvasSize();\n\t\tthis.setColorCell();\n\t\tthis.initInputNodes();\n\t\tthis.initPopupHidden();\n\n\t\tthis.sendWorkerInitFields({\n\t\t\trandom: this.random,\n\t\t\trows: this.rows,\n\t\t\tcols: this.cols\n\t\t})\n\t\t.then(({ activeCells, field, buffer }) => {\n\t\t\tthis.initEventListeners();\n\t\t\tthis.drawField();\n\t\t\tthis.renderPopup();\n\t\t});\n\t}\n\n\tinitInputNodes() {\n\t\tthis.nodes.popupInputRowsNode.value = String(this.rows);\n\t\tthis.nodes.popupInputColsNode.value = String(this.cols);\n\t}\n\n\tinitPopupHidden() {\n\t\tthis.togglePopup(this.popupHidden);\n\t}\n\n\tdisableInputs() {\n\t\tthis.nodes.popupInputRowsNode.disabled = true;\n\t\tthis.nodes.popupInputColsNode.disabled = true;\n\t}\n\n\tenableInputs() {\n\t\tthis.nodes.popupInputRowsNode.disabled = false;\n\t\tthis.nodes.popupInputColsNode.disabled = false;\n\n\t\tif (this.focusedInput !== null) {\n\t\t\tthis.focusedInput.focus();\n\t\t\tthis.focusedInput = null;\n\t\t}\n\t}\n\n\tsendWorkerInitFields({\n\t\trandom, rows, cols\n\t}) {\n\n\t\tthis.load();\n\t\tthis.disableInputs();\n\n\t\tthis.worker.postMessage({\n\t\t\ttype: 'initFields',\n\t\t\tpayload: {\n\t\t\t\trandom: random,\n\t\t\t\trows: rows,\n\t\t\t\tcols: cols\n\t\t\t}\n\t\t});\n\n\t\tconst resultWorker = new Promise((resolve, reject) => {\n\t\t\tthis.worker.onmessage = (event) => {\n\t\t\t\tconst message = event.data;\n\n\t\t\t\tthis.loadComplete();\n\t\t\t\tthis.enableInputs();\n\n\t\t\t\tif (message.type === 'result: initFields') {\n\t\t\t\t\tconst data = message.data;\n\t\t\t\t\tconst { activeCells, field, buffer } = data;\n\n\t\t\t\t\tthis.activeCells = activeCells;\n\t\t\t\t\tthis.field = field;\n\t\t\t\t\tthis.buffer = buffer;\n\n\t\t\t\t\tresolve(data);\n\t\t\t\t}\n\n\t\t\t\treject(false);\n\t\t\t};\n\t\t});\n\n\t\treturn resultWorker;\n\t}\n\n\tload() {\n\t\tthis.loading = true;\n\t\tthis.nodes.popupLoadNode.classList.add('popup__load_active');\n\t\tthis.nodes.popupNode.classList.add('popup_load');\n\t}\n\n\tloadComplete() {\n\t\tthis.loading = false;\n\t\tthis.nodes.popupLoadNode.classList.remove('popup__load_active');\n\t\tthis.nodes.popupNode.classList.remove('popup_load');\n\t}\n\n\tinitEventListeners() {\n\t\twindow.addEventListener('resize', this.resizeAndDraw);\n\t\tconst matchMediaDark = window.matchMedia('(prefers-color-scheme: dark)');\n\n\t\tmatchMediaDark.addEventListener('change', this.setColorCellAndDraw);\n\n\t\tthis.nodes.popupPauseNode.addEventListener('click', () => {\n\t\t\tif (this.played === false) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.stopGame();\n\t\t});\n\n\t\tthis.nodes.popupPlayNode.addEventListener('click', () => {\n\t\t\tif (this.played === true) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.startGame();\n\t\t});\n\n\t\tthis.nodes.popupGenerateNode.addEventListener('click', this.generateNewFields);\n\n\t\tthis.nodes.canvasNode.addEventListener('pointerdown', (event) => {\n\t\t\tif (this.loading === true) return;\n\t\t\tif (event.button === 2 || event.button === 1) return false; // Если это правая или средняя кнопка мыши, это не тот клик\n\t\t\tthis.isDragging = true;\n\t\t\tthis.isRealDragging = false;\n\t\t});\n\n\t\tthis.nodes.canvasNode.addEventListener('pointermove', (event) => {\n\t\t\tif (event.button === 2 || event.button === 1) return false; // Если это правая или средняя кнопка мыши, это не тот клик\n\t\t\tif (this.isDragging === true && this.loading === false) {\n\t\t\t\tthis.isRealDragging = true;\n\t\t\t\tthis.generateCellByClick(event, true)\n\t\t\t};\n\t\t});\n\n\t\tdocument.addEventListener('pointerup', (event) => {\n\t\t\tif (event.button === 2 || event.button === 1) return false; // Если это правая или средняя кнопка мыши, это не тот клик\n\t\t\tconst clickOnPopupBool = this.isClickOnElement(event, this.nodes.popupNode);\n\t\t\tif (clickOnPopupBool === true) return;\n\t\t\tif (this.isRealDragging === false && this.loading === false) this.generateCellByClick(event, false);\n\n\t\t\tthis.isDragging = false;\n\t\t\tthis.isRealDragging = false;\n\t\t});\n\n\t\tthis.nodes.popupRandomCheckboxNode.addEventListener('input', () => {\n\t\t\tthis.random = !this.random;\n\t\t\tif (this.localStorageUse) this.setLocalStorage('random', this.random);\n\t\t\tthis.renderRandom();\n\t\t});\n\n\t\tthis.nodes.popupSpeedRangeNode.addEventListener('input', this.calcSpeedInputChange);\n\t\tthis.nodes.popupClearNode.addEventListener('click', this.clear);\n\n\t\tthis.nodes.popupStepNode.addEventListener('click', () => {\n\t\t\tthis.disableInputs();\n\t\t\tthis.stepGame()?.then(data => {\n\t\t\t\tthis.enableInputs();\n\t\t\t});\n\t\t});\n\n\t\tthis.nodes.popupInputRowsNode.addEventListener('input', () => {\n\t\t\tconst newRows = restrictInputValue(this.nodes.popupInputRowsNode, 0, 2000);\n\t\t\tif (this.localStorageUse) this.setLocalStorage('rows', newRows);\n\n\t\t\tthis.focusedInput = this.nodes.popupInputRowsNode;\n\t\t\tthis.resizeFieldRows(newRows);\n\t\t});\n\n\t\tthis.nodes.popupInputColsNode.addEventListener('input', () => {\n\t\t\tconst newCols = restrictInputValue(this.nodes.popupInputColsNode, 0, 2000);\n\t\t\tif (this.localStorageUse) this.setLocalStorage('cols', newCols);\n\n\t\t\tthis.focusedInput = this.nodes.popupInputColsNode;\n\t\t\tthis.resizeFieldCols(newCols);\n\t\t});\n\n\t\tthis.nodes.popupCloseNode.addEventListener('click', () => {\n\t\t\tthis.popupHidden = !this.popupHidden;\n\t\t\tthis.togglePopup(this.popupHidden);\n\t\t});\n\t}\n\n\ttogglePopup = (popupHidden) => {\n\t\tif (this.localStorageUse === true) this.setLocalStorage('popupHidden', this.popupHidden);\n\n\t\tif (this.popupHidden === true) {\n\t\t\tthis.nodes.popupNode.classList.add('popup_hidden');\n\t\t\tthis.nodes.popupCloseNode.textContent = 'Открыть';\n\t\t} else {\n\t\t\tthis.nodes.popupNode.classList.remove('popup_hidden');\n\t\t\tthis.nodes.popupCloseNode.textContent = 'Скрыть';\n\t\t}\n\t}\n\n\tresizeFieldRows(newRows) {\n\t\tif (this.loading === true) return;\n\n\t\tthis.sendWorkerResizeField(newRows, this.cols, this.random)\n\t\t.then((data) => {\n\t\t\tthis.setCanvasSize();\n\t\t\tthis.drawField();\n\t\t\tthis.renderTime();\n\t\t\tthis.renderPopup();\n\t\t});\n\t}\n\n\tresizeFieldCols(newCols) {\n\t\tif (this.loading === true) return;\n\n\t\tthis.sendWorkerResizeField(this.rows, newCols, this.random)\n\t\t.then((data) => {\n\t\t\tthis.setCanvasSize();\n\t\t\tthis.drawField();\n\t\t\tthis.renderTime();\n\t\t\tthis.renderPopup();\n\t\t});\n\t}\n\n\tsendWorkerResizeField(newRows, newCols, random) {\n\t\tthis.load();\n\t\tthis.disableInputs();\n\n\t\tthis.worker.postMessage({\n\t\t\ttype: 'resizeField',\n\t\t\tpayload: {\n\t\t\t\tnewRows: newRows,\n\t\t\t\tnewCols: newCols,\n\t\t\t\trandom: random\n\t\t\t}\n\t\t});\n\n\t\tconst resultWorker = new Promise((resolve, reject) => {\n\t\t\tthis.worker.onmessage = (event) => {\n\t\t\t\tconst message = event.data;\n\n\t\t\t\tthis.loadComplete();\n\t\t\t\tthis.enableInputs();\n\n\n\t\t\t\tif (message.type === 'result: resizeField') {\n\t\t\t\t\tconst data = message.data;\n\t\t\t\t\tconst { field, buffer, activeCells, rows, cols } = data;\n\n\t\t\t\t\tthis.field = field;\n\t\t\t\t\tthis.buffer = buffer;\n\t\t\t\t\tthis.activeCells = activeCells;\n\t\t\t\t\tthis.rows = rows;\n\t\t\t\t\tthis.cols = cols;\n\n\t\t\t\t\tresolve(data);\n\t\t\t\t}\n\n\t\t\t\treject(false);\n\t\t\t};\n\t\t}).catch(() => {});\n\n\t\treturn resultWorker;\n\t}\n\n\tisClickOnElement(event, element) {\n\t\tconst target = event.target; // Получаем целевой элемент клика\n\n\t\t// Проверяем, является ли целевой элемент или его родительские элементы равным заданному элементу\n\t\tlet currentNode = target;\n\t\twhile (currentNode != null) {\n\t\t\tif (currentNode === element) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tcurrentNode = currentNode.parentElement;\n\t\t}\n\n\t\t// Если не было найдено совпадений, возвращаем false\n\t\treturn false;\n\t}\n\n\tsendWorkerDeleteOrCreateCell(typeAction, key) {\n\t\tthis.load();\n\n\t\tthis.worker.postMessage({\n\t\t\ttype: 'deleteOrCreateCell',\n\t\t\tpayload: {\n\t\t\t\ttypeAction: typeAction,\n\t\t\t\tkey: key\n\t\t\t}\n\t\t});\n\n\t\tconst resultWorker = new Promise((resolve, reject) => {\n\t\t\tthis.worker.onmessage = (event) => {\n\t\t\t\tconst message = event.data;\n\n\t\t\t\tthis.loadComplete();\n\n\t\t\t\tif (message.type === 'result: deleteOrCreateCell') {\n\t\t\t\t\tconst data = message.data;\n\t\t\t\t\tresolve(data);\n\t\t\t\t}\n\n\t\t\t\treject(false);\n\t\t\t};\n\t\t});\n\n\t\treturn resultWorker;\n\t}\n\n\tgenerateCellByClick = (event, moved = false) => {\n\t\tif (this.played === true) {\n\t\t\treturn;\n\t\t}\n\t\tconst rect = this.nodes.canvasNode.getBoundingClientRect();\n\t\tconst x = event.clientX - rect.left;\n\t\tconst y = event.clientY - rect.top;\n\t\tconst col = Math.floor(x / this.cellSize);\n\t\tconst row = Math.floor(y / this.cellSize);\n\t\tconst key = this.getKey(row, col);\n\n\t\tconst isCellAlive = this.field.get(key);\n\n\t\tconst deleteCell = () => {\n\t\t\tthis.activeCells--;\n\t\t\tthis.field.set(key, false);\n\t\t\tthis.sendWorkerDeleteOrCreateCell('delete', key).then();\n\t\t};\n\n\t\tconst createCell = () => {\n\t\t\tthis.activeCells++;\n\t\t\tthis.field.set(key, true);\n\t\t\tthis.sendWorkerDeleteOrCreateCell('create', key).then();\n\t\t}\n\n\t\tif (isCellAlive === false && moved === true) {\n\t\t\tcreateCell();\n\t\t} else if (isCellAlive === false && moved === false) {\n\t\t\tcreateCell();\n\t\t} else if (isCellAlive === true && moved === false) {\n\t\t\tdeleteCell();\n\t\t}\n\n\t\tthis.renderPopulation();\n\t\tthis.drawField();\n\t}\n\n\tinitCalcSpeed() {\n\t\tconst max = Number(this.nodes.popupSpeedRangeNode.max);\n\t\tconst min = Number(this.nodes.popupSpeedRangeNode.min);\n\n\t\tconst speedPercent = (this.speed - 1) / 9;\n\t\tconst value = min + (speedPercent * (max - min));\n\n\t\tthis.nodes.popupSpeedRangeNode.value = String(value);\n\t\tthis.nodes.popupSpeedInfoNode.textContent = String(this.speed);\n\t}\n\n\tcalcSpeedInputChange = () => {\n\t\tconst lastGameState = this.played;\n\t\tthis.stopGame();\n\n\t\tconst currentVal = this.nodes.popupSpeedRangeNode.valueAsNumber;\n\t\tconst max = Number(this.nodes.popupSpeedRangeNode.max);\n\t\tconst min = Number(this.nodes.popupSpeedRangeNode.min);\n\n\t\tconst end = max - min;\n\t\tconst currentValMod = currentVal - min;\n\n\t\tconst currentValPercent = currentValMod / end;\n\t\tconst newSpeed = Number(((currentValPercent * 9) + 1).toFixed(1));\n\t\tthis.speed = newSpeed;\n\n\t\tthis.nodes.popupSpeedInfoNode.textContent = String(this.speed);\n\n\t\tif (this.localStorageUse) this.setLocalStorage('speed', this.speed);\n\n\t\tif (lastGameState === true) this.startGame();\n\t}\n\n\tuseLocalStorage() {\n\t\tconst lastLocalStorage = this.getLocalStorage();\n\n\t\tif (lastLocalStorage.random !== undefined) {\n\t\t\tthis.random = lastLocalStorage.random;\n\t\t}\n\n\t\tif (lastLocalStorage.speed !== undefined) {\n\t\t\tthis.speed = lastLocalStorage.speed;\n\t\t}\n\n\t\tif (lastLocalStorage.rows !== undefined) {\n\t\t\tthis.rows = lastLocalStorage.rows;\n\t\t}\n\n\t\tif (lastLocalStorage.cols !== undefined) {\n\t\t\tthis.cols = lastLocalStorage.cols;\n\t\t}\n\n\t\tif (lastLocalStorage.popupHidden !== undefined) {\n\t\t\tthis.popupHidden = lastLocalStorage.popupHidden;\n\t\t}\n\t}\n\n\tclear = () => {\n\t\tif (this.loading === true) false;\n\n\t\tthis.stopGame();\n\t\tthis.gameTime = 0;\n\t\tthis.gameLastTime = 0;\n\t\tthis.gameStartTime = 0;\n\t\tthis.cycles = 0;\n\n\t\tthis.disableInputs();\n\n\t\tthis.sendWorkerInitFields({\n\t\t\trandom: false,\n\t\t\trows: this.rows,\n\t\t\tcols: this.cols\n\t\t}).then(data => {\n\t\t\tthis.drawField();\n\t\t\tthis.renderTime();\n\t\t\tthis.renderPopup();\n\t\t\tthis.enableInputs();\n\t\t});\n\t}\n\n\tgenerateNewFields = () => {\n\t\tif (this.loading === true) false;\n\n\t\tthis.sendWorkerInitFields({\n\t\t\trandom: true,\n\t\t\trows: this.rows,\n\t\t\tcols: this.cols\n\t\t}).then(data => {\n\t\t\tthis.cycles = 0;\n\t\t\tthis.drawField();\n\t\t\tthis.renderPopup();\n\t\t});\n\t}\n\n\tinitNodes(injectedNode) {\n\n\t\tinjectedNode.innerHTML = `\n\t\t\t<div class=\"wrapper\">\n\t\t\t\t<div class=\"wrapper-canvas\">\n\t\t\t\t\t<canvas class=\"canvas\"></canvas>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"popup\">\n\t\t\t\t\t<div class=\"popup__item popup__play\">Play</div>\n\t\t\t\t\t<div class=\"popup__item popup__pause\">Пауза</div>\n\t\t\t\t\t<div class=\"popup__item popup__clear\">Очистить</div>\n\t\t\t\t\t<div class=\"popup__item popup__step\">Шаг</div>\n\t\t\t\t\t<div class=\"popup__item popup__generate\">Сгенерировать</div>\n\t\t\t\t\t<label class=\"popup__item popup__random-checkbox-item\">\n\t\t\t\t\t\t<input type=\"checkbox\" class=\"popup__random-checkbox\">\n\t\t\t\t\t\t<span>Рандом</span>\n\t\t\t\t\t</label>\n\t\t\t\t\t<div class=\"popup__item\">\n\t\t\t\t\t\tВремя:\n\t\t\t\t\t\t<span class=\"popup__time\">0.0</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"popup__item\">Поколение: <span class=\"popup__cycles\">0</span></div>\n\t\t\t\t\t<div class=\"popup__item\">Население: <span class=\"popup__population\">0</span></div>\n\t\t\t\t\t<div class=\"popup__item\">\n\t\t\t\t\t\t<span>Скорость: </span>\n\t\t\t\t\t\t<span class=\"popup__speed-info\">1</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"popup__item\">\n\t\t\t\t\t\t<input class=\"popup__speed-range\" type=\"range\" min=\"0\" max=\"100\" value=\"50\">\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"popup__item popup__item_inputs\">\n\t\t\t\t\t\t<input type=\"number\" class=\"popup__rows popup__inputs\" placeholder=\"rows\" min=\"0\" max=\"2000\">\n\t\t\t\t\t\t<input type=\"number\" class=\"popup__cols popup__inputs\" placeholder=\"cols\" min=\"0\" max=\"2000\">\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"popup__item popup__close\">Скрыть</div>\n\n\t\t\t\t\t<div class=\"popup__item popup__load\">Загрузка</div>\n\n\t\t\t\t</div>\n\n\t\t\t</div>\n\t\t`;\n\n\t\tconst popupNode = this._querySelector(injectedNode, '.popup');\n\t\tconst canvasNode = this._querySelector(injectedNode, '.canvas');\n\t\tconst wrapperCanvasNode = this._querySelector(injectedNode, '.wrapper-canvas');\n\t\tconst popupPlayNode = this._querySelector(popupNode, '.popup__play');\n\t\tconst popupPauseNode = this._querySelector(popupNode, '.popup__pause');\n\t\tconst popupTimeNode = this._querySelector(popupNode, '.popup__time');\n\t\tconst popupPopulationNode = this._querySelector(popupNode, '.popup__population');\n\t\tconst popupCyclesNode = this._querySelector(popupNode, '.popup__cycles');\n\t\tconst popupGenerateNode = this._querySelector(popupNode, '.popup__generate');\n\t\tconst popupRandomCheckboxNode = this._querySelector(popupNode, '.popup__random-checkbox');\n\t\tconst popupSpeedRangeNode = this._querySelector(popupNode, '.popup__speed-range');\n\t\tconst popupSpeedInfoNode = this._querySelector(popupNode, '.popup__speed-info');\n\t\tconst popupClearNode = this._querySelector(popupNode, '.popup__clear');\n\t\tconst popupStepNode = this._querySelector(popupNode, '.popup__step');\n\t\tconst popupLoadNode = this._querySelector(popupNode, '.popup__load');\n\t\tconst popupInputRowsNode = this._querySelector(popupNode, '.popup__rows');\n\t\tconst popupInputColsNode = this._querySelector(popupNode, '.popup__cols');\n\t\tconst popupCloseNode = this._querySelector(popupNode, '.popup__close');\n\n\t\tthis.nodes = {\n\t\t\tcanvasNode: canvasNode,\n\t\t\tpopupNode: popupNode,\n\t\t\tpopupPlayNode: popupPlayNode,\n\t\t\tpopupPauseNode: popupPauseNode,\n\t\t\tpopupTimeNode: popupTimeNode,\n\t\t\tpopupPopulationNode: popupPopulationNode,\n\t\t\tpopupCyclesNode: popupCyclesNode,\n\t\t\tpopupGenerateNode: popupGenerateNode,\n\t\t\twrapperCanvasNode: wrapperCanvasNode,\n\t\t\tpopupRandomCheckboxNode: popupRandomCheckboxNode,\n\t\t\tpopupSpeedRangeNode: popupSpeedRangeNode,\n\t\t\tpopupSpeedInfoNode: popupSpeedInfoNode,\n\t\t\tpopupClearNode: popupClearNode,\n\t\t\tpopupStepNode: popupStepNode,\n\t\t\tpopupLoadNode: popupLoadNode,\n\t\t\tpopupInputRowsNode: popupInputRowsNode,\n\t\t\tpopupInputColsNode: popupInputColsNode,\n\t\t\tpopupCloseNode: popupCloseNode\n\t\t}\n\t}\n\n\t_querySelector(parentNode, selector) {\n\t\tconst node = parentNode.querySelector(selector);\n\t\tif (node === null) {\n\t\t\tthrow new Error(`GameOfLife: элемент с классом ${selector} не найден`);\n\t\t}\n\t\treturn node;\n\t}\n\n\n\tresizeAndDraw = () => {\n\t\tthis.setCanvasSize();\n\t\tthis.drawField();\n\t}\n\n\tsetColorCell = () => {\n\t\tthis.colorCell = getComputedStyle(document.documentElement).getPropertyValue('--color');\n\t}\n\n\tsetColorCellAndDraw = () => {\n\t\tthis.setColorCell();\n\t\tthis.drawField();\n\t}\n\n\tsetCanvasSize = () => {\n\t\tconst width = this.nodes.wrapperCanvasNode.offsetWidth;\n\t\tconst height = this.nodes.wrapperCanvasNode.offsetHeight;\n\n\t\tconst aspectRatio = this.cols / this.rows;\n\n\t\tconst canvasWidth = Math.min(width, height * aspectRatio);\n\t\tconst canvasHeight = canvasWidth / aspectRatio;\n\n\t\tthis.cellSize = canvasWidth / this.cols;\n\n\t\tconst xPadding = (width - canvasWidth) / 2;\n\t\tconst yPadding = (height - canvasHeight) / 2;\n\n\t\tthis.nodes.canvasNode.width = canvasWidth;\n\t\tthis.nodes.canvasNode.height = canvasHeight;\n\n\t\tthis.nodes.wrapperCanvasNode.style.padding = `${yPadding}px ${xPadding}px`;\n\t}\n\n\tgetKey(row, col) {\n\t\treturn `${row}-${col}`;\n\t}\n\n\tdrawField() {\n\t\tthis.load();\n\n\t\tthis.ctx.clearRect(0, 0, this.nodes.canvasNode.width, this.nodes.canvasNode.height);\n\t\tconst cellSize = this.cellSize;\n\n\t\tthis.ctx.fillStyle = this.colorCell;\n\n\t\tfor (let i = 0; i < this.rows; i++) {\n\t\t\tfor (let j = 0; j < this.cols; j++) {\n\t\t\t\tconst key = this.getKey(i, j);\n\t\t\t\tif (this.field.get(key)) {\n\t\t\t\t\tthis.ctx.fillRect(j * cellSize, i * cellSize, cellSize, cellSize);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.loadComplete();\n\t}\n\n\tsendWorkerUpdateField() {\n\t\tthis.load();\n\n\t\tthis.worker.postMessage({\n\t\t\ttype: 'updateField',\n\t\t\tpayload: {}\n\t\t});\n\n\t\tconst resultWorker = new Promise((resolve, reject) => {\n\t\t\tthis.worker.onmessage = (event) => {\n\t\t\t\tconst message = event.data;\n\n\t\t\t\tthis.loadComplete();\n\n\t\t\t\tif (message.type === 'result: updateField') {\n\t\t\t\t\tconst data = message.data;\n\t\t\t\t\tconst { activeCells, field, buffer } = data;\n\n\t\t\t\t\tthis.activeCells = activeCells;\n\t\t\t\t\tthis.field = field;\n\t\t\t\t\tthis.buffer = buffer;\n\n\t\t\t\t\tresolve(data);\n\t\t\t\t}\n\n\t\t\t\treject(false);\n\t\t\t};\n\t\t});\n\n\t\treturn resultWorker;\n\t}\n\n\trenderPopup() {\n\t\tthis.renderPopulation();\n\t\tthis.renderRandom();\n\t\tthis.nodes.popupCyclesNode.textContent = String(this.cycles);\n\t\tthis.nodes.popupRandomCheckboxNode.checked = this.random;\n\t}\n\n\trenderTime() {\n\t\tlet gameTime = Date.now() - this.gameStartTime + this.gameLastTime;\n\t\tif (this.gameStartTime === 0) gameTime = 0;\n\t\tthis.gameTime = gameTime;\n\n\t\tthis.nodes.popupTimeNode.textContent = (this.gameTime / 1000).toFixed(1);\n\t}\n\n\trenderRandom() {\n\t\tif (this.random === true) {\n\t\t\tthis.nodes.popupGenerateNode.classList.add('popup__generate_active');\n\t\t} else {\n\t\t\tthis.nodes.popupGenerateNode.classList.remove('popup__generate_active');\n\t\t}\n\t}\n\n\trenderPopulation() {\n\t\tthis.nodes.popupPopulationNode.textContent = String(this.activeCells);\n\t}\n\n\tstepGame = () => {\n\t\tif (this.loading === true) return;\n\n\t\treturn this.sendWorkerUpdateField()\n\t\t.then(data => {\n\t\t\tthis.drawField();\n\t\t\tthis.cycles = this.cycles + 1;\n\t\t\tthis.renderPopup();\n\t\t\treturn data;\n\t\t});\n\t}\n\n\tstartGame() {\n\t\tthis.disableInputs();\n\t\tthis.played = true;\n\t\tthis.gameStartTime = Date.now();\n\t\tthis.animationObj = requestInterval(this.stepGame, this.interval / this.speed ** 1.5);\n\t\tthis.animationTimeId = requestInterval(this.stepAnimationRenderTime);\n\t}\n\n\tstepAnimationRenderTime = () => {\n\t\tthis.renderTime();\n\t}\n\n\tstopGame() {\n\t\tif (this.played === false) return;\n\t\tthis.played = false;\n\t\tthis.gameLastTime = this.gameTime;\n\t\tcancelAnimationFrame(this.animationObj.id);\n\t\tcancelAnimationFrame(this.animationTimeId.id);\n\t\tthis.enableInputs();\n\t}\n\n\tgetLocalStorage() {\n\t\treturn JSON.parse(localStorage.getItem('life') || '{}');\n\t}\n\n\tsetLocalStorage(key, value) {\n\t\tconst lastLocalStorage = this.getLocalStorage();\n\n\t\tlastLocalStorage[key] = value;\n\n\t\tlocalStorage.setItem('life', JSON.stringify(lastLocalStorage));\n\t}\n\n}\n\n\n","export function requestInterval(fn, interval = 0) {\n  const obj = {\n    id: 0,\n  };\n  let start = Date.now();\n\n  const animate = () => {\n\t\tif (interval === 0) {\n\t\t\tfn();\n\t\t\tobj.id = requestAnimationFrame(animate);\n\t\t\treturn;\n\t\t}\n\n\n    const now = Date.now();\n    const delta = now - start;\n\n    if (delta >= interval) {\n      fn();\n      start = now - (delta % interval);\n    }\n\n    obj.id = requestAnimationFrame(animate);\n  };\n\n  obj.id = requestAnimationFrame(animate);\n\n  return obj;\n}\n","export function restrictInputValue(input, min, max) {\n\tlet value = parseInt(input.value);\n\n\tif (isNaN(value)) {\n\t\tvalue = min;\n\t} else if (value < min) {\n\t\tvalue = min;\n\t} else if (value > max) {\n\t\tvalue = max;\n\t}\n\n\tinput.value = value.toString();\n\n\treturn value;\n}\n","let workerURL = require('./helpers/get-worker-url');\nlet url = new URL(__parcel__import__.meta.resolve(\"h7bGy\"));\nmodule.exports = workerURL(url.toString(), url.origin, true);","\"use strict\";\n\nmodule.exports = function (workerUrl, origin, isESM) {\n  if (origin === self.location.origin) {\n    // If the worker bundle's url is on the same origin as the document,\n    // use the worker bundle's own url.\n    return workerUrl;\n  } else {\n    // Otherwise, create a blob URL which loads the worker bundle with `importScripts`.\n    var source = isESM ? 'import ' + JSON.stringify(workerUrl) + ';' : 'importScripts(' + JSON.stringify(workerUrl) + ');';\n    return URL.createObjectURL(new Blob([source], {\n      type: 'application/javascript'\n    }));\n  }\n};"],"names":["$c1f387b1016b83f1$export$281c8d11e819ea94","fn","interval","obj","id","start","Date","now","animate","requestAnimationFrame","delta","$da0a748be2ea26f3$export$7913c0f032ea53bb","input","min","max","value","parseInt","isNaN","toString","$ec7203843e99b638$exports","$56b621a6dd25b2cb$exports","workerUrl","origin","isESM","self","location","source","JSON","stringify","URL","createObjectURL","Blob","type","$ec7203843e99b638$var$url","resolve","$cd65d10c62e67c5e$export$8981e2cb2c3fa123","ctx","rows","cols","cellSize","field","buffer","colorCell","animationObj","nodes","cycles","played","gameTime","gameStartTime","gameLastTime","random","speed","activeCells","localStorageUse","isDragging","isRealDragging","animationTimeId","worker","Worker","loading","focusedInput","popupHidden","injectedNode","cellsCountX","cellsCountY","Error","initNodes","canvasNode","getContext","useLocalStorage","initCalcSpeed","setCanvasSize","setColorCell","initInputNodes","initPopupHidden","sendWorkerInitFields","then","initEventListeners","drawField","renderPopup","popupInputRowsNode","String","popupInputColsNode","togglePopup","disableInputs","disabled","enableInputs","focus","load","postMessage","payload","Promise","reject","onmessage","event","message","data","loadComplete","popupLoadNode","classList","add","popupNode","remove","window","addEventListener","resizeAndDraw","matchMediaDark","matchMedia","setColorCellAndDraw","popupPauseNode","stopGame","popupPlayNode","startGame","popupGenerateNode","generateNewFields","button","generateCellByClick","document","isClickOnElement","popupRandomCheckboxNode","setLocalStorage","renderRandom","popupSpeedRangeNode","calcSpeedInputChange","popupClearNode","clear","popupStepNode","stepGame","newRows","resizeFieldRows","newCols","resizeFieldCols","popupCloseNode","textContent","sendWorkerResizeField","renderTime","catch","element","currentNode","target","parentElement","sendWorkerDeleteOrCreateCell","typeAction","key","moved","rect","getBoundingClientRect","x","clientX","left","y","clientY","top","col","Math","floor","row","getKey","isCellAlive","get","deleteCell","set","createCell","renderPopulation","Number","speedPercent","popupSpeedInfoNode","lastGameState","currentVal","valueAsNumber","newSpeed","currentValPercent","toFixed","lastLocalStorage","getLocalStorage","undefined","innerHTML","_querySelector","wrapperCanvasNode","popupTimeNode","popupPopulationNode","popupCyclesNode","parentNode","selector","node","querySelector","getComputedStyle","documentElement","getPropertyValue","width","offsetWidth","height","offsetHeight","aspectRatio","canvasWidth","canvasHeight","style","padding","clearRect","fillStyle","i","j","fillRect","sendWorkerUpdateField","checked","stepAnimationRenderTime","cancelAnimationFrame","parse","localStorage","getItem","setItem","$54810fc92916998b$var$injectedNode"],"version":3,"file":"only-js.256fcbba.js.map"}